(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{489:function(e,t,i){"use strict";i.r(t);var v=i(8),_=Object(v.a)({},(function(){var e=this,t=e.$createElement,i=e._self._c||t;return i("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[i("h1",{attrs:{id:"常用命令"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#常用命令"}},[e._v("#")]),e._v(" 常用命令")]),e._v(" "),i("ul",[i("li",[i("code",[e._v("git rebase -i HEAD~x")]),e._v(" 可以整理commit,也可以用来删除commit")]),e._v(" "),i("li",[i("code",[e._v("git rebase xxx")]),e._v(" 与目标分支合并")]),e._v(" "),i("li",[i("code",[e._v("git rebase --continue")]),e._v(" 合并中发生冲突时解决完冲突后继续rebase")]),e._v(" "),i("li",[i("code",[e._v("git reset --soft xxxx")]),e._v(" 撤销xxxx到暂存区")]),e._v(" "),i("li",[i("code",[e._v("git reset --hard xxxx")]),e._v(" 撤销xxxx到工作区")]),e._v(" "),i("li",[i("code",[e._v("git reset --no-edit xxxx")]),e._v(" 创建一个不带有xxxx的新commit")]),e._v(" "),i("li",[i("code",[e._v("git rebase --abort")]),e._v(" 放弃本次rebase")]),e._v(" "),i("li",[i("code",[e._v("git pull --rebase")]),e._v(" 通过rebase的方式来获得最新代码")]),e._v(" "),i("li",[i("code",[e._v("git push --force")]),e._v(" 可以用本地分支覆盖掉远程分支，慎用！")]),e._v(" "),i("li",[i("code",[e._v("git checkout -b xxxx")]),e._v(" 创建并切换到目标分支")]),e._v(" "),i("li",[i("code",[e._v("git branch -D xxxx")]),e._v(" 强制删除分支")]),e._v(" "),i("li",[i("code",[e._v("git reset --hard 远程分支")]),e._v(" 强制将本地分支变成远程分支")]),e._v(" "),i("li",[i("code",[e._v("git pull upstream <branch>")]),e._v(" 拉取上流的代码")]),e._v(" "),i("li",[i("code",[e._v("git remote remove origin")]),e._v(" 删除本地与远程仓库的连接")]),e._v(" "),i("li",[i("code",[e._v("git remote add origin <URL>")]),e._v(" 建立本地与远程仓库的连接（origin只是通俗名字）")]),e._v(" "),i("li",[i("code",[e._v("git remote add upstream <URL>")]),e._v(" 建立与fork仓库的连接（upstream只是通俗名字）")])])])}),[],!1,null,null,null);t.default=_.exports}}]);